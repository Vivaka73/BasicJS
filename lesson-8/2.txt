if (!("a" in window)) {
    var a = 1;
}
alert(a);// Атрибута «a» в window нет, и ему там неоткуда появится после if, поэтому undefined.

var b = function a(x) {
    x && a(--x);
};
alert(a);// 2 что-то не понимаю

function a(x) {
    return x * 2;
}
var a;
alert(a);//Здесь нет инициализации, поэтому в alert отображается исходный код функции.

function b(x, y, a) {
    arguments[2] = 10;
    alert(a);	
}
b(1, 2, 3);//a и arguments[2] — это ссылка на одно и то же значение. Иначе попадаем на память.

function a() {
    alert(this);
}
a.call(null);//this в глобальной области указывает на window. Вызов call() у функции с параметром null равнозначно вызову call() без аргументов. А без аргументов вызываемая функция не «биндится» ни к какому объекту (или «биндится» к «объекту по умолчанию» — window).